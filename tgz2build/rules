#!/usr/local/bin/make -f                                                                                                                                           
STAMPDIR=tgz2build/stamps

CONFIGURE_OPTS := --prefix $(ZBS_PREFIX) --enable-utf8 --enable-unicode-properties --disable-cpp
LDFLAGS += -L. -L./.libs
CONFIGURE_CMD = $(SHELL) ./configure

ifneq (,$(findstring solaris,$(ZBS_DIST)))
# Under solaris we need this switch to be able to use iconv.
  ifneq (,$(findstring amd64,$(ZBS_ARCH)))
		CONFIGURE_OPTS +=
  endif
  LDFLAGS += -Wl,-R/opt/syslog-ng/lib
endif

all: binary

binary: clean setup configure build install

setup:  $(STAMPDIR)/stamp-setup
$(STAMPDIR)/stamp-setup:
	mkdir -p tgz2build/stamps 
	touch $@

configure: $(STAMPDIR)/stamp-configure
$(STAMPDIR)/stamp-configure: setup
	LDFLAGS="$(LDFLAGS)" $(CONFIGURE_CMD) $(CONFIGURE_OPTS)
	touch $@

$(STAMPDIR)/stamp-configure: setup

build:  $(STAMPDIR)/stamp-build
$(STAMPDIR)/stamp-build: configure
	$(MAKE)
	touch $@

install: $(STAMPDIR)/stamp-install
$(STAMPDIR)/stamp-install: build
	rm -rf $(ZBS_STAGE_DIR) || true
	$(MAKE) install prefix=$(ZBS_STAGE_DIR)/$(ZBS_PREFIX) libdir=$(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/lib includedir=$(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/include
	touch $@

clean:
	rm -rf tgz2build/stamps || true
	rm -rf tgz2build/staging || true
	-$(MAKE) clean

.PHONY: build clean binary-indep binary-arch binary install
